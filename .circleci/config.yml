version: 2.1

jobs:
  create_pr_feature_to_test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install GitHub CLI
          command: |
            sudo apt update && sudo apt install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
              sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
              sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update && sudo apt install -y gh
      - run:
          name: Create PR from feature to test
          command: |
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch --all
            git checkout "$CIRCLE_BRANCH"
            gh pr create --base test --head "$CIRCLE_BRANCH" --title "[CI] Merge $CIRCLE_BRANCH to test" --body "Automated PR from CircleCI"

  hold_for_test_pr_approval:
    type: approval

  merge_feature_to_test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:kTvcBKQIYpwUzYIPu72z0IdfR1tHX+NaneassXNSK8I"
      - run:
          name: Merge branch to test after approval
          command: |
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch origin
            git checkout test
            git pull origin test
            git merge --no-ff "$CIRCLE_BRANCH" -m "Auto-merged $CIRCLE_BRANCH to test after approval"
            git push origin test

  create_pr_test_to_main:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install GitHub CLI
          command: |
            sudo apt update && sudo apt install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
              sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
              sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update && sudo apt install -y gh
      - run:
          name: Create PR from test to main
          command: |
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch --all
            git checkout test
            gh pr create --base main --head test --title "[CI] Merge test to main" --body "Automated PR from CircleCI"

  hold_for_main_pr_approval:
    type: approval

  merge_test_to_main:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:kTvcBKQIYpwUzYIPu72z0IdfR1tHX+NaneassXNSK8I"
      - run:
          name: Merge test to main after approval
          command: |
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch origin
            git checkout main
            git pull origin main
            git merge --no-ff test -m "Auto-merged test to main after approval"
            git push origin main

  test_job:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Run tests
          command: |
            echo "Running tests..."
            # Replace with actual test commands for Flutter/Dart
            flutter test

  build_flutter_apk:
    docker:
      - image: cirrusci/flutter:latest
    steps:
      - checkout
      - run:
          name: Build Flutter APK
          command: |
            flutter pub get
            flutter build apk --release
      - persist_to_workspace:
          root: .
          paths:
            - build/app/outputs/flutter-apk/app-release.apk

workflows:
  version: 2
  feature-to-test:
    jobs:
      - create_pr_feature_to_test:
          filters:
            branches:
              ignore:
                - test
                - main
      - hold_for_test_pr_approval:
          requires:
            - create_pr_feature_to_test
      - merge_feature_to_test:
          requires:
            - hold_for_test_pr_approval

  test-to-main:
    jobs:
      - create_pr_test_to_main:
          filters:
            branches:
              only:
                - test
      - hold_for_main_pr_approval:
          requires:
            - create_pr_test_to_main
      - merge_test_to_main:
          requires:
            - hold_for_main_pr_approval

  test_and_build:
    jobs:
      - test_job:
          filters:
            branches:
              only:
                - test
                - main
      - build_flutter_apk:
          requires:
            - test_job
          filters:
            branches:
              only:
                - main
