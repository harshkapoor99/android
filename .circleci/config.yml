version: 2.1

commands:
  flutter_setup:
    description: "Checkout, restore cache, install Flutter, get dependencies, and save cache."
    steps:
      - checkout
      - run:
          name: Install Ninja Build
          command: |
            sudo apt-get update
            sudo apt-get install -y ninja-build
      - run:
          name: Install Flutter SDK
          command: |
            if ! command -v flutter &> /dev/null
            then
                echo "Flutter not found. Installing..."
                git clone https://github.com/flutter/flutter.git -b stable --depth 1 $HOME/flutter
                echo 'export PATH="$PATH:$HOME/flutter/bin"' >> $BASH_ENV
                source $BASH_ENV
            else
                echo "Flutter already installed."
                flutter --version
            fi
            flutter doctor
      - run:
          name: Get Flutter Dependencies
          command: flutter pub get

jobs:
  create_pr_feature_to_test:
    docker:
      - image: cirrusci/flutter:3.7.0
    steps:
      - checkout
      - run:
          name: Install GitHub CLI
          command: |
            sudo apt update && sudo apt install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
              sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
            https://cli.github.com/packages stable main" | \
              sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update && sudo apt install -y gh
      - run:
          name: Create PR from feature to test
          command: |
            if [ -z "$GH_TOKEN" ]; then
              echo "GH_TOKEN is not set. Please set it in CircleCI Project Settings → Environment Variables."
              exit 1
            fi
            export GITHUB_TOKEN="$GH_TOKEN"
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch --all
            git checkout "$CIRCLE_BRANCH"
            gh pr create \
              --base tests \
              --head "$CIRCLE_BRANCH" \
              --title "[CI] Merge $CIRCLE_BRANCH to tests" \
              --body "$(echo -e 'Automated PR from CircleCI\n\nThis PR was generated by CircleCI for branch $CIRCLE_BRANCH.')"

  hold_for_test_pr_approval:
    type: approval

  merge_feature_to_test:
    docker:
      - image: cirrusci/flutter:3.7.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:1gLCvRLQ0VPmPmVADX1UZth0hBWAOWs60C8QWfFItfE"
      - run:
          name: Merge branch to test after approval
          command: |
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch origin
            git checkout tests
            git pull origin tests
            git merge --no-ff "$CIRCLE_BRANCH" -m "Auto-merged $CIRCLE_BRANCH to tests after approval"
            git push origin tests

  create_pr_test_to_main:
    docker:
      - image: cirrusci/flutter:3.7.0
    steps:
      - checkout
      - run:
          name: Install GitHub CLI
          command: |
            sudo apt update && sudo apt install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
              sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
            https://cli.github.com/packages stable main" | \
              sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update && sudo apt install -y gh
      - run:
          name: Create PR from test to main
          command: |
            if [ -z "$GH_TOKEN" ]; then
              echo "GH_TOKEN is not set. Please set it in CircleCI Project Settings → Environment Variables."
              exit 1
            fi
            export GITHUB_TOKEN="$GH_TOKEN"
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch --all
            git checkout tests
            gh pr create --base main --head tests --title "[CI] Merge tests to main" --body "Automated PR from CircleCI"

  hold_for_main_pr_approval:
    type: approval

  merge_test_to_main:
    docker:
      - image: cirrusci/flutter:3.7.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:1gLCvRLQ0VPmPmVADX1UZth0hBWAOWs60C8QWfFItfE"
      - run:
          name: Merge test to main after approval
          command: |
            git config --global user.email "ci@example.com"
            git config --global user.name "CircleCI Bot"
            git fetch origin
            git checkout main
            git pull origin main
            git merge --no-ff tests -m "Auto-merged tests to main after approval"
            git push origin main

  test_job:
    docker:
      - image: cirrusci/flutter:3.7.0
    steps:
      - checkout
      - run:
          name: Flutter Setup
          command: |
            echo "Setting up Flutter environment..."
            flutter doctor
      - run:
          name: Run Tests
          command: |
            flutter test --coverage
      - store_test_results:

  build_flutter_apk:
    docker:
      - image: cirrusci/flutter:3.7.0
    steps:
      - checkout
      - run:
          name: Build Flutter APK
          command: |
            flutter pub get
            flutter build apk --release
      - persist_to_workspace:
          root: .
          paths:
            - build/app/outputs/flutter-apk/app-release.apk

workflows:
  version: 2
  feature-to-test:
    jobs:

  test_and_build:
    jobs:
      - test_job:
          filters:
            branches:
              only:
                - alpha
